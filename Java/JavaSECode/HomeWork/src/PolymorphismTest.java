/*
    ????????
        ??§Õ???????"????"¦É??"????"?????
            ???:
                ??????:Master
                ??????:Pet
                ??????????:Dog/Cat/Parrot
                ?????????¦É???????:feed()
                ????????§Ô?????:eat()
                ??????¦É????,??????
                ??????????????¦É??????feed(),??????¦É??????????????
 */
public class PolymorphismTest {
    public static void main(String[] args) {
        Master zhuRen = new Master();
        Pet gouZi = new Dog();
        Pet maoZi = new Cat();
        Pet yingWu = new Parrot();
        zhuRen.feed(gouZi);
        zhuRen.feed(maoZi);
        zhuRen.feed(yingWu);
    }
}

class Master{
    public void feed(Pet pet){
        System.out.println("????¦É????" + pet.toString());
        if(pet instanceof Dog){
            Dog d = (Dog) pet;
            d.eat();
        }else if (pet instanceof Cat){
            Cat c = (Cat) pet;
            c.eat();
        }else if (pet instanceof Parrot){
            Parrot p = (Parrot) pet;
            p.eat();
        }
    }
}

class Pet{
    public void eat(){
        System.out.println("??????????");
    }
}

class Dog extends Pet{
    @Override
    public void eat() {
        System.out.println("????????");
    }

    @Override
    public String toString() {
        return "??";
    }
}

class Cat extends Pet{
    @Override
    public void eat() {
        System.out.println("¨¨??????");
    }

    @Override
    public String toString() {
        return "¨¨";
    }
}

class Parrot extends Pet{
    @Override
    public void eat() {
        System.out.println("??????????");
    }

    @Override
    public String toString() {
        return "????";
    }
}
